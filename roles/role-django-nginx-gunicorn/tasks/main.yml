---
# tasks file for role-django-nginx-gunicorn
  - name: Update package list
    apt:
      update_cache: yes

  - name: Install base packages
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - vim
      - tree
      - htop
      - git
      - wget
      - curl
      - python3
      - python3-pip
      - python3-dev
      - python3-venv
      - sqlite3
      - python-setuptools
      - virtualenv
      - openssl
      - libjpeg62-turbo-dev
      - zlib1g-dev
      - libfreetype6-dev
      - liblcms2-dev
      - libwebp-dev
      - libtiff-dev
      - tcl-dev
      - tk-dev
      - python3-tk

  - name: Create directory for project
    file:
      path: "{{ project_name_path }}"
      state: directory
      recurse: yes
      owner: gitlab-runner
      group: root

  - name: Change default interpetator
    shell: |
      sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1

  - name: Install virtualenv
    shell: cd {{ project_name_path }}; python3 -m venv env

  - name: "Activate virtualenv and install packages with pip3"
    shell: |
      cd {{ project_name_path }}
      source env/bin/activate
      env/bin/pip3 install -r requirements.txt

#  INSTALL AND CONFIGURE GUNICORN  #####################3333
  - name: Remove default nginx configuration
    file:
      name: /etc/nginx/sites-enabled/default
      state: absent

  - name: Install Nginx
    apt:
      name: nginx
      state: latest
      update_cache: true
    register: nginxinstalled
    notify:
      - nginx start

  - name: Add Nginx config
    when: nginxinstalled is success
    template:
      src: default.conf.j2
      dest: "/etc/nginx/sites-available/default.conf"
      owner: root
      group: root
    notify:
      - nginx restart

  - name: Add simlink and add user www-data in root group
    shell:
      ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/
      usermod -aG root www-data

# INSTALL AND CONFIGURE GUNICORN #########################
  - name: "Install Gunicorn with the local instance of pip3"
    shell: |
      cd {{ project_name_path }}
      source env/bin/activate
      pip3 install gunicorn

  - name: Create Gunicorn Socket file
    template:
      src: gunicorn.socket.j2
      dest: "/etc/systemd/system/gunicorn.socket"

  - name: Create Gunicorn Service file
    template:
      src: gunicorn.service.j2
      dest: "/etc/systemd/system/gunicorn.service"

  - name: Start Gunicorn.socket
    shell: "/bin/systemctl start gunicorn.socket"

  - name: Enable Gunicorn.socket
    shell: "/bin/systemctl enable gunicorn.socket"

  - name: Change permissions on project directory
    file:
      path: "/var/www"
      owner: root
      group: root
      state: directory
      recurse: yes